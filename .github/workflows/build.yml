name: Build

on: [push]

env:
  CIBW_BUILD: 'cp38-*'
  CIBW_SKIP: pp*
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_BEFORE_ALL_LINUX: ./install_depends.sh
  CIBW_BEFORE_BUILD: ./pre_build.sh
  CIBW_TEST_COMMAND: python -c "import wx"
  CIBW_ARCHS_MACOS: x86_64 # universal2 # build wheels that'll work on M1 Macs

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.1.3
      - name: Build wheel
        run: |
          git submodule update --init --recursive
          cp *.sh Phoenix/
          cp buildreqs.txt Phoenix/buildreqs.txt
          cd Phoenix
          python -m cibuildwheel --output-dir ../dist
          cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist

  # upload:
  #   runs-on: ubuntu-latest
  #   needs: [build_source, build_wheels]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #         path: ./dist

  #     - name: Upload to GitHub Releases
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.event.ref, 'refs/tags')
  #       with:
  #         files: dist/*
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Publish distribution ðŸ“¦ to PyPI
  #       if: startsWith(github.event.ref, 'refs/tags')
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         password: ${{ secrets.pypi_password }}